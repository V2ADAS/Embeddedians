
#include "MCAL/MGPIO/MGPIO_Int.h"
#include "MCAL/MRCC/MRCC_Int.h"
#include"MCAL/MEXTI/MEXTI_Int.h"
#include"MCAL/MNVIC/MNVIC_Int.h"
#include"MCAL/MSTK/MSYSTICK_Int.h"
#include"MCAL/MTIMER/MTIMER_Int.h"
#include"HAL/HSERVO/HSERVO_Int.h"
#include"HAL/HULTRA_SONIC/HULTRA_SONIC_Int.h"
#include"MCAL/MI2C/MI2C_int.h"
#include"HAL/HLCD/HLCD_Int.h"

void Led(void){
	static u8 Tog = 1;
	//Toggle Led
	MGPIO_vSetPinValue(PORTC,PIN13,Tog);
	Tog ^= 1;
	if(Tog)
		MRCC_vEnableClock(TIM1_EN);
	else
		MRCC_vDisableClock(TIM1_EN);
	MTIMER_vClearCNT(TIMER1);
}


void TIMER1_IRQ(void){
	static u8 x=0;
	if(x==0){
		MGPIO_vSetPinAtomic(PORTA, PIN1, HIGH);
		MGPIO_vSetPinAtomic(PORTA, PIN2, LOW);
		MGPIO_vSetPinAtomic(PORTA, PIN5, LOW);
	}
	else if(x==1){
		MGPIO_vSetPinAtomic(PORTA, PIN1, LOW);
		MGPIO_vSetPinAtomic(PORTA, PIN2, HIGH);
		MGPIO_vSetPinAtomic(PORTA, PIN5, LOW);
	}
	else{
		MGPIO_vSetPinAtomic(PORTA, PIN1, LOW);
		MGPIO_vSetPinAtomic(PORTA, PIN2, LOW);
		MGPIO_vSetPinAtomic(PORTA, PIN5, HIGH);
	}
	x= (x+1)%3;

}

int main(){
	//Initialize RCC
	MRCC_vInit();
	//Enable GPIO Clock
	MRCC_vEnableClock(GPIOA_EN);
	MRCC_vEnableClock(GPIOB_EN);
	MRCC_vEnableClock(GPIOC_EN);
	//Enable SYSCFG
	MRCC_vEnableClock(SYSCFG_EN);

	//Initialize SYSTICK
	MSYSTICK_vInit();

	MGPIO_vSetPinMode(PORTA,PIN0,INPUT);
	MGPIO_vSetPinInPutType(PORTA,PIN0,PULLUP);

	//Initialize EXTI
	MNVIC_vEnableInterrupt(NVIC_EXTI0);

	SYSCFG_vConfigEXTI_Line(EXTI_PORTA,EXTI0);
	MEXTI_vEnableInterrupt(EXTI0);
	//Set EXTI0 to RISING
	MEXTI_vInterruptTrigger(EXTI0, FALLING);
	//Set Call Back Function
	MEXTI_vCallBack(EXTI0,&Led);

	//Set LED PIN as OUTPUT
	MGPIO_vSetPinMode(PORTC,PIN13,OUTPUT);
	//*********************TIMER***********************//
	MRCC_vEnableClock(TIM1_EN);
	MNVIC_vEnableInterrupt(NVIC_TIM1_UP_TIM10);
	MTIMER_vPeriodicMS(TIMER1, 5000);
	MTIMER_CallBack(TIMER1, &TIMER1_IRQ);
	MGPIO_vSetPinMode(PORTA, PIN1, OUTPUT);
	MGPIO_vSetPinMode(PORTA, PIN2, OUTPUT);
	MGPIO_vSetPinMode(PORTA, PIN5, OUTPUT);
	//******************I2C**********************//
	// ENABLE I2C1
	MRCC_vEnableClock(I2C1_EN);
	/* I2C 1 Initialization */
	MGPIO_vSetPinMode(PORTB,PIN6,ALTFUNC);
	MGPIO_vSetPinMode(PORTB,PIN7,ALTFUNC);

	MGPIO_vSetPinOutPutType(PORTB, PIN6, GPIO_OPEN_DRAIN);
	MGPIO_vSetPinOutPutType(PORTB, PIN7, GPIO_OPEN_DRAIN);
	MGPIO_vSetPinOutPutSpeed(PORTB, PIN6, MGPIO_SPEED_HIGH);
	MGPIO_vSetPinOutPutSpeed(PORTB, PIN7, MGPIO_SPEED_HIGH);

	MGPIO_vSetAlternativeFunction(PORTB, PIN6,MGPIO_ALTFUNC_I2C13);
	MGPIO_vSetAlternativeFunction(PORTB, PIN7,MGPIO_ALTFUNC_I2C13);

	MGPIO_vSetPinInPutType(PORTB, PIN6, PULLUP);
	MGPIO_vSetPinInPutType(PORTB, PIN7, PULLUP);

	MI2C_vMasterInit(I2C1);

	lcd_init();
	//**************TIMER1**************************//
/*	MRCC_vEnableClock(TIM1_EN);
	MRCC_vEnableClock(TIM2_EN);
	MRCC_vEnableClock(TIM3_EN);
	MRCC_vEnableClock(TIM4_EN);
	MRCC_vEnableClock(TIM5_EN);

	MRCC_vEnableClock(TIM9_EN);
	MRCC_vEnableClock(TIM10_EN);
	MRCC_vEnableClock(TIM11_EN);

	MNVIC_vEnableInterrupt(NVIC_TIM1_BRK_TIM9);
	MNVIC_vEnableInterrupt(NVIC_TIM1_UP_TIM10);
	MNVIC_vEnableInterrupt(NVIC_TIM1_TRG_COM_TIM11);
	MNVIC_vEnableInterrupt(NVIC_TIM1_CC);
	MNVIC_vEnableInterrupt(NVIC_TIM2);
	MNVIC_vEnableInterrupt(NVIC_TIM3);
	MNVIC_vEnableInterrupt(NVIC_TIM4);
	MNVIC_vEnableInterrupt(NVIC_TIM5);

	HULTRA_vInitialize(ULTRA_SONIC1,TIMER1, CH1);
	HULTRA_vInitialize(ULTRA_SONIC2,TIMER1, CH2);
	HSERVO_vServoInit(SERVO5,TIMER10,CH1);
 	 */
	/*MTIMER_vPeriodicMS(TIMER5, 15);
	MTIMER_CallBack(TIMER5, &ULTRA_SONIC);*/

	lcd_send_string("HELLO I2C");
	lcd_put_cur(0, 1);
	lcd_send_string("Amr");

	while(1){

	}

}






