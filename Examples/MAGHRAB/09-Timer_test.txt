
#include "MCAL/MGPIO/MGPIO_Int.h"
#include "MCAL/MRCC/MRCC_Int.h"
#include"MCAL/MEXTI/MEXTI_Int.h"
#include"MCAL/MNVIC/MNVIC_Int.h"
#include"MCAL/MSTK/MSYSTICK_Int.h"
#include"MCAL/MTIMER/MTIMER_Int.h"
#include"HAL/HSERVO/HSERVO_Int.h"
#include"HAL/HULTRA_SONIC/HULTRA_SONIC_Int.h"
#include"MCAL/MI2C/MI2C_int.h"
#include"HAL/HLCD/HLCD_Int.h"

void Led(void){
	static u8 Tog = 1;
	//Toggle Led
	MGPIO_vSetPinValue(PORTC,PIN13,Tog);
	Tog ^= 1;
	if(Tog)
		MRCC_vEnableClock(TIM1_EN);
	else
		MRCC_vDisableClock(TIM1_EN);
	MTIMER_vClearCNT(TIMER1);
}
#define SCB_CPACR       (*((volatile u32 *)0xE000ED88))


int main(){
	SCB_CPACR |= ((3UL << 10 * 2) | (3UL << 11 * 2));
	//Initialize RCC
	MRCC_vInit();
	//Enable GPIO Clock
	MRCC_vEnableClock(GPIOA_EN);
	MRCC_vEnableClock(GPIOB_EN);
	MRCC_vEnableClock(GPIOC_EN);
	//Enable SYSCFG
	MRCC_vEnableClock(SYSCFG_EN);

	//Initialize SYSTICK
	MSYSTICK_vInit();

	MGPIO_vSetPinMode(PORTA,PIN0,INPUT);
	MGPIO_vSetPinInPutType(PORTA,PIN0,PULLUP);

	//Initialize EXTI
	MNVIC_vEnableInterrupt(NVIC_EXTI0);

	SYSCFG_vConfigEXTI_Line(EXTI_PORTA,EXTI0);
	MEXTI_vEnableInterrupt(EXTI0);
	//Set EXTI0 to RISING
	MEXTI_vInterruptTrigger(EXTI0, FALLING);
	//Set Call Back Function
	MEXTI_vCallBack(EXTI0,&Led);

	//Set LED PIN as OUTPUT
	MGPIO_vSetPinMode(PORTC,PIN13,OUTPUT);
	//******************I2C**********************//
	// ENABLE I2C1
	MRCC_vEnableClock(I2C1_EN);
	/* I2C 1 Initialization */
	MI2C_vMasterInit(I2C1);

	HLCD_vInit();
	//**************TIMER1**************************//
	MRCC_vEnableClock(TIM1_EN);
	MRCC_vEnableClock(TIM2_EN);
	MRCC_vEnableClock(TIM3_EN);
	MRCC_vEnableClock(TIM4_EN);
	MRCC_vEnableClock(TIM5_EN);

	MRCC_vEnableClock(TIM9_EN);
	MRCC_vEnableClock(TIM10_EN);
	MRCC_vEnableClock(TIM11_EN);

	MNVIC_vEnableInterrupt(NVIC_TIM1_BRK_TIM9);
	MNVIC_vEnableInterrupt(NVIC_TIM1_UP_TIM10);
	MNVIC_vEnableInterrupt(NVIC_TIM1_TRG_COM_TIM11);
	MNVIC_vEnableInterrupt(NVIC_TIM1_CC);
	MNVIC_vEnableInterrupt(NVIC_TIM2);
	MNVIC_vEnableInterrupt(NVIC_TIM3);
	MNVIC_vEnableInterrupt(NVIC_TIM4);
	MNVIC_vEnableInterrupt(NVIC_TIM5);

	//MGPIO_vSetPinMode(PORTB, PIN4, OUTPUT);
	//MGPIO_vSetPinAtomic(PORTB, PIN8, LOW);
	//MTIMER_vEXTCNTClock(TIMER5, CH2, 10);
	//MTIMER_CallBack(TIMER5, &CNT);

	/*
	HULTRA_vInitialize(ULTRA_SONIC1,TIMER1, CH1);
	HULTRA_vInitialize(ULTRA_SONIC2,TIMER1, CH2);
	HSERVO_vServoInit(SERVO5,TIMER10,CH1);
	 */
	/*MTIMER_vPeriodicMS(TIMER5, 15);
	MTIMER_CallBack(TIMER5, &ULTRA_SONIC);*/

	HLCD_vPutCur(0,0);
	HLCD_vSendString("Hello I2C");
	HLCD_vSendNum(-128);
	MSYSTICK_vDelayms(100);
	HLCD_vPutCur(1,0);
	HLCD_vSendString("Time:");
	MTIMER_vStartTime(TIMER2);
	u8 x=1;
	while(1){
		HLCD_vPutCur(1, 5);
		HLCD_vSendNum(MTIMER_f32GetElapsedTime(TIMER2, sec));
		if(MTIMER_f32GetElapsedTime(TIMER2, sec)>5 && x==1 )
		{
			MTIMER_vCntTimer(TIMER2, StopTimer);
			MTIMER_vDelayms(TIMER3, 4000);
			MTIMER_vCntTimer(TIMER2, ContinueTimer);
			x=0;
		}

	}

}






